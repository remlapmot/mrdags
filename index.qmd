---
title: "R, DOT, and TikZ code to plot directed acyclic graphs and single world intervention graphs for Mendelian randomization analyses"
author: "Tom Palmer"
date: "2019-01-24"
date-modified: last-modified
format:
  html:
    monofont: "Fira Mono"
bibliography: refs.bib
---

```{=html}
<!-- HTML -->
<!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/firacode@6.2.0/distr/fira_code.css"> -->
<link rel="stylesheet" href="https://code.cdn.mozilla.net/fonts/fira.css">
```

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  cache = TRUE,
  dev = "svg",
  fig.align = "center",
  collapse = TRUE,
  comment = '#>'
)

# pgf for tikz
if (!tinytex::check_installed('pgf')) tinytex::tlmgr_install("pgf")

# tikz-cd
if (!tinytex::check_installed('tikz-cd')) tinytex::tlmgr_install("tikz-cd")

# tikz-swigs
if (!tinytex::check_installed('tikz-swigs')) tinytex::tlmgr_install("tikz-swigs")

# Using advice from Andrew Heiss blogpost to use SVGs in HTML from TikZ
# https://www.andrewheiss.com/blog/2021/08/27/tikz-knitr-html-svg-fun/#connecting-dvisvgm-to-ghostscript-on-macos
# For svg figures we require the latex package dvisvgm
if (!tinytex::check_installed("dvisvgm")) tinytex::tlmgr_install("dvisvgm")
# On macOS dvisvgm needs the ghostscript library dynamically linked to it via
# either the LIBGS environment variable or the --libgs flag.
# The libgs.dylib from Homebrew (brew install ghostscript) is sufficient.
if (Sys.info()[["sysname"]] == "Darwin") {
  # Ghostscript from Homebrew
  Sys.setenv(LIBGS = "/opt/homebrew/lib/libgs.dylib")
  if (Sys.info()[["machine"]] == "arm64" && compareVersion(as.character(quarto::quarto_version()), "1.2.56") == -1) {
    # Install Ghostscript from https://pages.uoregon.edu/koch/Ghostscript-10.00-Full.pkg
    Sys.setenv(LIBGS = "/usr/local/lib/libgs.dylib")    
  }
}
```

## Introduction

This webpage shows some R code for generating figures, directed acyclic graphs (DAGs), and single world intervention graphs (SWIGs) for Mendelian randomization (MR) analyses.

First, we load in the tidyverse collection of packages to have access to the pipe and the ggplot2 package, amongst other features.
```{r tdyvrs, message=FALSE, warning=FALSE}
library(tidyverse)
```

If you do not already one you will need a LaTeX installation. In R it is easiest to install [TinyTeX](https://yihui.org/tinytex/) as follows.
```{r tnytx, eval=FALSE}
install.packages("tinytex")
tinytex::install_tinytex()
```

## DiagrammeR package

The website for DiagrammeR is here: <http://rich-iannone.github.io/DiagrammeR/> .

We will draw the DAGs using Graphviz which uses the DOT language to describe graphs.

### Single genotype DAG

```{r dg-single-dag}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB]

  node [shape=ellipse]
  U [label='Confounders']

  node [shape=box, height=0.3, width=0.3]
  G [label='Genotype']
  X [label='Phenotype']
  Y [label='Outcome']
  { rank = same; G X Y }

  G -> X [minlen=3]
  U -> X
  U -> Y
  X -> Y [minlen=3]
  }
  ", height = 200)
```

#### Version without borders around observed variables

```{r dg-single-dag-2}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB]

  node [shape=ellipse]
  U [label='Confounders']

  node [shape=plaintext, height=0.3, width=0.3]
  G [label='Genotype']
  X [label='Phenotype']
  Y [label='Outcome']

  { rank = same; G X Y }

  G -> X [minlen=3]
  U -> X
  U -> Y
  X -> Y [minlen=3]
  }
  ", height = 200)
```

### Multiple genotype DAG

```{r dg-multiple-dag}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB, layout=neato]

  node [shape=ellipse]
  U [label='Confounders', pos='3,1!']

  node [shape=box, height=0.3, width=0.3]
  G1 [label='<I>G@_{1}</I>', pos='0,0.75!']
  G2 [label='<I>G@_{2}</I>', pos='0,0!']
  G3 [label='<I>G@_{3}</I>', pos='0,-0.75!']
  X [label='Phenotype', pos='2,0!']
  Y [label='Outcome', pos='4,0!']

  G1 -> X 
  G2 -> X 
  G3 -> X 
  U -> X
  U -> Y
  X -> Y 
  }
  ", height = 300)
```

This could be extended for more genotypes.

#### Version without borders around observed variables

```{r dg-multiple-dag-2}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB, layout=neato]

  node [shape=ellipse]
  U [label='Confounders', pos='3,1!']

  node [shape=plaintext, height=0.3, width=0.3]
  G1 [label='<I>G@_{1}</I>', pos='0,0.75!']
  G2 [label='<I>G@_{2}</I>', pos='0,0!']
  G3 [label='<I>G@_{3}</I>', pos='0,-0.75!']
  X [label='Phenotype', pos='2,0!']
  Y [label='Outcome', pos='4,0!']

  G1 -> X 
  G2 -> X 
  G3 -> X 
  U -> X
  U -> Y
  X -> Y 
  }
  ", height = 300)
```

### MVMR DAGs 

We can plot the DAGs in Figure 4 of @sanderson-ije-2019 [here](https://academic.oup.com/view-large/figure/162152273/dyy262f4.tif).

#### Scenario 1: $X_2$ confounder of $X_1$ and $Y$

```{r mvmr-dag-1}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB, layout=neato]

  node [shape=ellipse]
  U [label='Confounders', pos='3,1!']

  node [shape=plaintext, height=0.3, width=0.3]
  G1 [label='<I>G@_{1}</I>', pos='0,0!']
  X1 [label='<I>X@_{1}</I>', pos='2,0!']
  Y [label=<<I>Y</I>>, pos='4,0!']
  G2 [label='<I>G@_{2}</I>', pos='0,-1!']
  X2 [label='<I>X@_{2}</I>', pos='2,-1!']

  G1 -> X1
  G2 -> X2
  U -> X1
  U -> Y
  U -> X2
  X1 -> Y
  X2 -> Y
  X2 -> X1
  }
  ", height = 300)
```

#### Scenario 2: $X_2$ collider of $X_1$ and $Y$

```{r mvmr-dag-2}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB, layout=neato]

  node [shape=ellipse]
  U [label='Confounders', pos='3,1!']

  node [shape=plaintext, height=0.3, width=0.3]
  G1 [label='<I>G@_{1}</I>', pos='0,0!']
  X1 [label='<I>X@_{1}</I>', pos='2,0!']
  Y [label=<<I>Y</I>>, pos='4,0!']
  G2 [label='<I>G@_{2}</I>', pos='0,-1!']
  X2 [label='<I>X@_{2}</I>', pos='2,-1!']

  G1 -> X1
  G2 -> X2
  U -> X1
  U -> Y
  U -> X2
  X1 -> Y
  Y -> X2
  X1 -> X2
  }
  ", height = 300)
```

#### Scenario 3: $X_2$ on a pleiotropic pathway

```{r mvmr-dag-3}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB, layout=neato]

  node [shape=ellipse]
  U [label='Confounders', pos='3,1!']

  node [shape=plaintext, height=0.3, width=0.3]
  G1 [label='<I>G@_{1}</I>', pos='0,0!']
  X1 [label='<I>X@_{1}</I>', pos='2,0!']
  Y [label=<<I>Y</I>>, pos='4,0!']
  G2 [label='<I>G@_{2}</I>', pos='0,-1!']
  X2 [label='<I>X@_{2}</I>', pos='2,-1!']

  G1 -> X1
  G2 -> X2
  U -> X1
  U -> Y
  U -> X2
  X1 -> Y
  X2 -> Y
  }
  ", height = 300)
```

#### Scenario 4: $X_2$ mediator of the effect of $X_1$ on $Y$

```{r mvmr-dag-4}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB, layout=neato]

  node [shape=ellipse]
  U [label='Confounders', pos='3,1!']

  node [shape=plaintext, height=0.3, width=0.3]
  G1 [label='<I>G@_{1}</I>', pos='0,0!']
  X1 [label='<I>X@_{1}</I>', pos='2,0!']
  Y [label=<<I>Y</I>>, pos='4,0!']
  G2 [label='<I>G@_{2}</I>', pos='0,-1!']
  X2 [label='<I>X@_{2}</I>', pos='2,-1!']

  edge [arrowhead='vee']
  G1 -> X1
  G2 -> X2
  U -> X1
  U -> Y
  U -> X2
  X1 -> Y
  X2 -> Y
  X1 -> X2
  }
  ", height = 300)
```

### Bidirectional MR figure of combined DAGs

For a bidirectional MR analysis there are 2 separate DAGs which are as follows.

```{r dg-bidir-fig-1}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB, layout=neato]

  node [shape=ellipse]
  U [label='Confounders', pos='3,1!']

  node [shape=plaintext, height=0.3, width=0.3]
  GX [label='Genotypes \n for phenotype', pos='0,0!']
  X [label='Phenotype', pos='2,0!']
  Y [label='Outcome', pos='4,0!']

  GX -> X [penwidth=2]
  U -> X [penwidth=2]
  U -> Y [penwidth=2]
  X -> Y [penwidth=2]
  }
  ", height = 200)
```

```{r bg-bidir-fig-2}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB, layout=neato]

  node [shape=ellipse]
  U [label='Confounders', pos='3,1!']

  node [shape=plaintext, height=0.3, width=0.3]
  X [label='Phenotype', pos='2,0!']
  Y [label='Outcome', pos='4,0!']
  GY [label='Genotypes \n for outcome', pos='6,0!']

  U -> X [penwidth=2]
  U -> Y [penwidth=2]
  Y -> X [penwidth=2]
  GY -> Y [penwidth=2]
  }
  ", height = 200)
```

We can combine these into a single figure as follows.

```{r dg-bidir-fig}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB, layout=neato]

  node [shape=ellipse]
  U [label='Confounders', pos='3,1!']

  node [shape=plaintext, height=0.3, width=0.3]
  GX [label='Genotypes \n for phenotype', pos='0,0!']
  X [label='Phenotype', pos='2,0!']
  Y [label='Outcome', pos='4,0!']
  GY [label='Genotypes \n for outcome', pos='6,0!']

  { rank = same; GX X Y GY }

  GX -> X [penwidth=2]
  U -> X [penwidth=2]
  U -> Y [penwidth=2]
  X -> Y [penwidth=2]
  Y -> X [color=blue, penwidth=2]
  GY -> Y [color=blue, penwidth=2]
  }
  ", height = 200)
```

Arguably we could add additional blue arrows from the Confounders node.

If you prefer a greyscale figure replace `blue` with `grey`/`DimGrey`/`grey30` (or change the number as required. See [here](https://rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html#colors) for more colors.

### Pleiotropy DAGs

There are many types of pleiotropy. Let's plot some of the pleiotropy DAGs from @sanderson-nrmp-2022.

#### Horizontal pleiotropy (causes bias)

```{r dg-pleio-1}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB]

  node [shape=ellipse]
  U [label='Confounders']

  node [shape=plaintext, height=0.3, width=0.3]
  G [label='Genotype']
  X [label='Phenotype']
  Y [label='Outcome']
  C [label='Other phenotype']

  { rank = same; G X Y }

  G -> X [minlen=3]
  G -> C
  U -> X
  U -> Y
  X -> Y [minlen=3]
  C -> Y
  }
  ", height = 300)
```

#### Horizontal pleiotropy (no bias)

```{r dg-pleio-2}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB, layout=neato]

  node [shape=ellipse]
  U [label='Confounders', pos='3,1!']

  node [shape=plaintext, height=0.3, width=0.3]
  G [label='Genotype', pos='0,0!']
  X [label='Phenotype', pos='2,0!']
  Y [label='Outcome', pos='4,0!']
  C [label='Other phenotype', pos='2,-1!']

  G -> X
  G -> C
  U -> X
  U -> Y
  X -> Y
  }
  ", height = 300)
```

#### Confounding via linkage disequilibrium

```{r dg-pleio-3}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB, layout=neato]

  node [shape=ellipse]
  U [label='Confounders', pos='3,1!']

  node [shape=plaintext, height=0.3, width=0.3]
  G1 [label='Genotype 1', pos='0,0!']
  G2 [label='Genotype 2', pos='0,-1!']
  X [label='Phenotype', pos='2,0!']
  Y [label='Outcome', pos='4,0!']
  C [label='Other phenotype', pos='2,-1!']

  G1 -> X
  G1 -> G2 [dir='both']
  G2 -> C
  U -> X
  U -> Y
  X -> Y
  C -> Y
  }
  ", height = 300)
```

#### Vertical pleiotropy

```{r dg-pleio-4}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB]

  node [shape=ellipse]
  U [label='Confounders']

  node [shape=plaintext, height=0.3, width=0.3]
  G [label='Genotype']
  X [label='Phenotype 1']
  Y [label='Outcome']
  C [label='Phenotype 2']

  { rank = same; G X C Y }

  G -> X [minlen=2]
  X -> C [minlen=2]
  U -> X
  U -> Y
  C -> Y [minlen=2]
  }
  ", height = 200)
```

#### Misspecification of the primary phenotype

```{r dg-pleio-5}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB, layout=neato]

  node [shape=ellipse]
  U [label='Confounders', pos='3,1!']

  node [shape=plaintext, height=0.3, width=0.3]
  G [label='Genotype', pos='0,0!']
  X [label='Phenotype 1', pos='2,0!']
  Y [label='Outcome', pos='4,0!']
  C [label='Phenotype 2', pos='2,-1!']

  G -> C
  C -> X
  U -> X
  U -> Y
  X -> Y
  C -> Y
  }
  ", height = 300)
```

#### Correlated pleiotropy

```{r dg-pleio-6}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB, layout=neato]

  node [shape=ellipse]
  U [label='Confounders', pos='3,1!']

  node [shape=plaintext, height=0.3, width=0.3]
  G [label='Genotype', pos='0,0!']
  X [label='Phenotype 1', pos='2,0!']
  Y [label='Outcome', pos='4,0!']
  C [label='Phenotype 2', pos='2,-1!']

  G -> X
  G -> C
  C -> X
  U -> X
  U -> Y
  X -> Y
  C -> Y
  }
  ", height = 300)
```

### Single genotype path diagram

#### Explicitly including the confounder
```{r dg-single-path}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB, layout=neato]

  node [shape=ellipse, height=0.3, width=0.3]
  U [label=<<I>U</I>>, pos='3,1!']

  node [shape=box, height=0.3, width=0.3]
  G [label=<<I>G</I>>, pos='0,0!']
  X [label=<<I>X</I>>, pos='2,0!']
  Y [label=<<I>Y</I>>, pos='4,0!']

  node [shape=circle, height=0.35, fixedsize=true]
  Ex [label='<I>&epsilon;@_{X}</I>', pos='2,1!']
  Ey [label='<I>&epsilon;@_{Y}</I>', pos='4,1!']

  G -> X [label='<I>&beta;@_{GX}</I>']
  Ex -> X [label=1]
  Ey -> Y [label=1]
  U -> X [label='<I>&beta;@_{UX}</I>']
  U -> Y [label='<I>&beta;@_{UY}</I>']
  X -> Y [label='<I>&beta;@_{XY}</I>']
  U -> U [dir='both', headport='n', tailport='n']
  G -> G [dir='both', headport='w', tailport='w']
  }
  ", height = 250)
```

#### Including variance terms

Note in the diagram below $\sigma_{X}^2$ and $\sigma_{Y}^2$ represent the variance of the respective error/residual terms ($\varepsilon_X$, $\varepsilon_Y$) and not the variance of $X$ and $Y$.

```{r dg-single-path-variance}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB, layout=neato]

  node [shape=ellipse, height=0.3, width=0.3]
  U [label=<<I>U</I>>, pos='3,1!']

  node [shape=box, height=0.3, width=0.3]
  G [label=<<I>G</I>>, pos='0,0!']
  X [label=<<I>X</I>>, pos='2,0!']
  Y [label=<<I>Y</I>>, pos='4,0!']

  node [shape=circle, height=0.35, fixedsize=true]
  Ex [label='<I>&epsilon;@_{X}</I>', pos='2,1!']
  Ey [label='<I>&epsilon;@_{Y}</I>', pos='4,1!']

  G -> X [label='<I>&beta;@_{GX}</I>']
  Ex -> X [label=1]
  Ey -> Y [label=1]
  U -> X [label='<I>&beta;@_{UX}</I>']
  U -> Y [label='<I>&beta;@_{UY}</I>']
  X -> Y [label='<I>&beta;@_{XY}</I>']
  U -> U [dir='both', headport='n', tailport='n', label=<var(<I>U</I>)>]
  G -> G [dir='both', headport='w', tailport='w', label=<var(<I>G</I>)>]
  Ex -> Ex [dir='both', headport='n', tailport='n', label=<<I>&sigma;@_{X}@^{2}</I>>]
  Ey -> Ey [dir='both', headport='n', tailport='n', label=<<I>&sigma;@_{Y}@^{2}</I>>]
  }
  ", height = 250)
```

#### Including correlated error terms between exposure and outcome

```{r dg-single-path-2}
DiagrammeR::grViz("
  digraph mrdag {

  graph [rankdir=TB, layout=neato, splines=true]

  node [shape=box, height=0.3, width=0.3]
  G [label=<<I>G</I>>, pos='0,0!']
  X [label=<<I>X</I>>, pos='2,0!']
  Y [label=<<I>Y</I>>, pos='4,0!']

  node [shape=circle, height=0.35, fixedsize=true]
  Ex [label='<I>&epsilon;@_{X}</I>', pos='2,1!']
  Ey [label='<I>&epsilon;@_{Y}</I>', pos='4,1!']
  dummy [label='', pos='3,1!', color=white, height=0.5]

  G -> X [label='<I>&beta;@_{GX}</I>']
  Ex -> X [label=1]
  Ey -> Y [label=1]
  X -> Y [label='<I>&beta;@_{XY}</I>']
  Ex -> Ey [dir='both', label=<<I>&rho;</I>>]
  G -> G [dir='both', headport='w', tailport='w']
  }
  ", height = 250)
```

## dagitty package

The website for DAGitty is <http://www.dagitty.net/>

```{r dgtty, warning=FALSE, message=FALSE}
library(dagitty)
```

### Using DOT syntax

The DAG for a single genotype.
```{r dgtty-single-dag}
#| fig.height=2
mrdag <- dagitty('dag {
  G -> X -> Y
  X <- U -> Y
  G [pos="0,0"]
  X [e, pos="1,0"]
  U [pos="1.5,-0.4"]
  Y [o, pos="2,0"]
}')

plot(mrdag)
```

### Using ggdag

```{r ggdg-single-dag, warning=FALSE, message=FALSE}
#| fig.height=3.5
library(ggdag)
mrdag <- dagitty('dag {
  G -> X -> Y
  X <- U -> Y
  G [pos="0,0"]
  X [e, pos="1,0"]
  U [pos="1.5,0.4"]
  Y [o, pos="2,0"]
}')

ggmrdag <- tidy_dagitty(mrdag)
ggdag(ggmrdag) + theme_dag()
```

This can be labelled as follows.

```{r ggdg-single-dag-2}
#| fig.height=3.5
mrdag <- mrdag %>%
  dag_label(
    labels = c(
      "X" = "Exposure",
      "Y" = "Outcome",
      "G" = "Genotype",
      "U" = "Confounders"))
ggdag(mrdag,  use_labels = "label") + theme_dag()
```

Dagitty can identify the instrumental variable on the DAG.

```{r ggdg-single-dag-3}
#| fig.height=3.5
mrdag %>% ggdag_instrumental() + theme_dag()
```

It correctly identifies the genotype, $G$, as the instrumental variable.

### Using R model type syntax in ggdag

```{r ggdg-single-dag-4}
#| fig.height=3.5
coords <- list(x = c(G = 0, X = 1, Y = 2, U = 1.5),
               y = c(G = 0, X = 0, Y = 0, U = 1))
mrdag <- dagify(
  X ~ G + U,
  Y ~ X + U,
  labels = c(
    "G" = "Genotype",
    "X" = "Exposure",
    "Y" = "Outcome",
    "U" = "Confounders"
  ),
  exposure = "X",
  outcome = "Y",
  coords = coords
)
ggdag(mrdag, use_labels = "label") + theme_dag()
```

Plotting directly with **ggplot2** functions.

```{r ggdg-single-dag-5}
#| fig.height=3.5
mrdag %>%
  ggplot(aes(
    x = x,
    y = y,
    xend = xend,
    yend = yend
  )) +
  geom_dag_point() +
  geom_dag_edges() +
  geom_dag_text() +
  theme_dag()
```

Showing the paths.

```{r ggdg-single-dag-6}
#| fig.height=3.5
set.seed(123)
dagify(Y ~ X + U,
       X ~ U + G,
       exposure = "X",
       outcome = "Y") %>%
ggdag_paths() + theme_dag()
```

Adjustment set for the effect of $X$ on $Y$.  

```{r ggdg-single-dag-7}
#| fig.height=3.5
dagify(Y ~ X + U,
       X ~ U + G,
       exposure = "X",
       outcome = "Y",
       coords = coords) %>%
  ggdag_adjustment_set() + theme_dag()
```  

This shows that the path from $G$ to $X$ is unconfounded. And that when $U$ is adjusted for the path from $X$ to $Y$ is unconfounded.

### Multiple genotype DAG

```{r ggdg-multiple-dag}
coords2 <- list(x = c(G1 = 0, G2 = 0, G3 = 0, X = 1, Y = 2, U = 1.5),
                y = c(G1 = 0.5, G2 = 0, G3 = -0.5, X = 0, Y = 0, U = 1))
mrdag <- dagify(
  X ~ G1,
  X ~ G2,
  X ~ G3,
  Y ~ X,
  X ~ U,
  Y ~ U,
  exposure = "X",
  outcome = "Y",
  coords = coords2
)
ggdag(mrdag) + theme_dag()
```

This could be extended for more genotypes.

## Eleanor Murray's TikZ diagrams using the tikz code chunk engine

I believe that tikz diagrams can be included in Rmarkdown documents using the tikz code chunk engine for output types `pdf_document` and `html_document`. 

Tikz is a package for LaTeX and so pdf is its natural output. So far I have not been able to include these figures in either `html_notebook` or `word_document` output formats. I suspect that the images need conversion to png files for these to work under rmarkdown.

We will use some of the LaTeX code for drawing DAGs using tikz provided by Eleanor Murray [here](https://github.com/eleanormurray/causalgraphs_latex).

In its LaTeX preamble, this code loads in several TikZ libraries. As such for our tikz code chunks to compile in our Rmd file we need to define a new template file, e.g.`tikz-template.tex`, and call our tikz code chunks as follows.

````{verbatim}
```{tikz}
#| out.width="65%", 
#| engine.opts=list(template = "tikz-template.tex",
#|                  dvisvgm.opts = "--font-format=woff")
\begin{tikzpicture}
% Your tikz code goes here ...
\end{tikzpicture}
```
````  

The `tikz-template.tex` file includes the TikZ preamble code from Eleanor Murray's LaTeX code plus the required template code. The contents of the template file is as follows.

```{verbatim, lang='tex', file='tikz-template.tex'}
```

We can now plot our DAGs.

### Single genotype DAGs using TikZ

#### Specifying node coordinates

```{tikz tkz-single-dag}
#| out.width='65%',
#| engine.opts=list(template = "tikz-template.tex",
#|                  dvisvgm.opts = "--font-format=woff")
\begin{tikzpicture}
\node (1) at (0,0) {$G$};
\node (2) at (1.5,0) {$X$};
\node (3) at (3,0) {$Y$};
\node (4) at (2.25,1) {$U$};
\draw[Arrow] (1) -- (2);
\draw[Arrow] (2) -- (3);
\draw[Arrow] (4) -- (2);
\draw[Arrow] (4) -- (3);
\end{tikzpicture}
```

#### Single genotype DAG using tikz-cd

The tikz-cd package provides helpful syntax for making commutative diagrams which we can use to produce DAGs.

First install the package.

```r
tinytex::tlmgr_install("tikz-cd")
```

Then we can plot the single instrument DAG using the following code.

```{tikz tkz-single-dag-2}
#| out.width='65%',
#| engine.opts=list(template = "tikz-template.tex",
#|                  dvisvgm.opts = "--font-format=woff")
\usetikzlibrary{cd}
\tikzcdset{arrow style=tikz, diagrams={>=stealth}}
\begin{tikzcd}[column sep=tiny]
& & & & U \arrow[dl, thick] \arrow[dr, thick] & \\
G \arrow[thick]{rrr} & & & X \arrow[thick]{rr} & & Y
\end{tikzcd}
```

#### Single genotype DAG using simpler TikZ code

```{tikz tikz-single-dag-3}
#| out.width='65%',
#| engine.opts=list(dvisvgm.opts = "--font-format=woff")
\usetikzlibrary{positioning}
\tikzset{
    > = stealth,
    every path/.append style = {
        arrows = ->,
        thick
    }
}
\tikz{
    \node (g) {$G$};
    \node (x) [right = of g] {$X$};
    \node (y) [right = of x] {$Y$};
    \node (u) [above right = 0.5cm and 0.25cm of x] {$U$};
    \path (g) edge (x);
    \path (x) edge (y);
    \path (u) edge (x);
    \path (u) edge (y);
}
```

### Multiple genotype DAGs using TikZ

#### Specifying node coordinates

```{tikz tkz-multiple-dag}
#| out.width='65%', 
#| engine.opts=list(template = "tikz-template.tex",
#|                  dvisvgm.opts = "--font-format=woff")
\begin{tikzpicture}
\node (1) at (0,0) {$G_2$};
\node (2) at (1.5,0) {$X$};
\node (3) at (3,0) {$Y$};
\node (4) at (2.25,1) {$U$};
\node (5) at (0,0.5) {$G_1$};
\node (6) at (0,-0.5) {$G_3$};
\draw[Arrow] (1) -- (2);
\draw[Arrow] (2) -- (3);
\draw[Arrow] (4) -- (2);
\draw[Arrow] (4) -- (3);
\draw[Arrow] (5) -- (2);
\draw[Arrow] (6) -- (2);
\end{tikzpicture}
```  

Again this could be extended for more genotypes.

#### Multiple genotype DAG using circularly spaced genotypes

```{tikz tkz-multiple-dag-circular}
#| out.width='65%', 
#| engine.opts=list(template = "tikz-template.tex",
#|                  dvisvgm.opts = "--font-format=woff")
\begin{tikzpicture}
\node (1) at (0,0) {$G_2$};
\node (2) at (1.5,0) {$X$};
\node (3) at (3,0) {$Y$};
\node (4) at (2.25,1) {$U$};
\node (5) at ([shift=({160:1.5})]2) {$G_1$};
\node (6) at ([shift=({200:1.5})]2) {$G_3$};
\draw[Arrow] (1) -- (2);
\draw[Arrow] (2) -- (3);
\draw[Arrow] (4) -- (2);
\draw[Arrow] (4) -- (3);
\draw[Arrow] (5) -- (2);
\draw[Arrow] (6) -- (2);
\end{tikzpicture}
```

### Pleiotropy DAGs using TikZ

#### Horizontal pleiotropy (causes bias)

```{tikz tkz-pleio-1}
#| out.width='65%',
#| engine.opts=list(dvisvgm.opts = "--font-format=woff")
\usetikzlibrary{positioning}
\tikzset{
    > = stealth,
    every path/.append style = {
        arrows = ->,
        thick
    }
}
\tikz{
    \node (g) {$G$};
    \node (x1) [right = of g] {$X_1$};
    \node (y) [right = of x1] {$Y$};
    \node (u) [above right = 0.5cm and 0.25cm of x1] {$U$};
    \node (x2) [below = 0.5cm of x1] {$X_2$};
    \path (g) edge (x1);
    \path (x1) edge (y);
    \path (u) edge (x1);
    \path (u) edge (y);
    \path (g) edge (x2);
    \path (x2) edge (y);
}
```

#### Horizontal pleiotropy (no bias)

```{tikz tkz-pleio-2}
#| out.width='65%',
#| engine.opts=list(dvisvgm.opts = "--font-format=woff")
\usetikzlibrary{positioning}
\tikzset{
    > = stealth,
    every path/.append style = {
        arrows = ->,
        thick
    }
}
\tikz{
    \node (g) {$G$};
    \node (x1) [right = of g] {$X_1$};
    \node (y) [right = of x1] {$Y$};
    \node (u) [above right = 0.5cm and 0.25cm of x1] {$U$};
    \node (x2) [below = 0.5cm of x1] {$X_2$};
    \path (g) edge (x1);
    \path (x1) edge (y);
    \path (u) edge (x1);
    \path (u) edge (y);
    \path (g) edge (x2);
}
```

#### Confounding via linkage disequilibrium

```{tikz tkz-pleio-3}
#| out.width='65%',
#| engine.opts=list(dvisvgm.opts = "--font-format=woff")
\usetikzlibrary{positioning}
\tikzset{
    > = stealth,
    every path/.append style = {
        arrows = ->,
        thick
    }
}
\tikz{
    \node (g1) {$G_1$};
    \node (x1) [right = of g1] {$X_1$};
    \node (y) [right = of x1] {$Y$};
    \node (u) [above right = 0.5cm and 0.25cm of x1] {$U$};
    \node (x2) [below = 0.5cm of x1] {$X_2$};
    \node (g2) [below = 0.5cm of g1] {$G_2$};
    \path (g1) edge (x1);
    \path (x1) edge (y);
    \path (u) edge (x1);
    \path (u) edge (y);
    \draw[<->] (g1) -- (g2);
    \path (g2) edge (x2);
    \path (x2) edge (y);
}
```

#### Vertical pleiotropy

```{tikz tkz-pleio-4}
#| out.width='65%',
#| engine.opts=list(dvisvgm.opts = "--font-format=woff")
\usetikzlibrary{positioning}
\tikzset{
    > = stealth,
    every path/.append style = {
        arrows = ->,
        thick
    }
}
\tikz{
    \node (g) {$G$};
    \node (x1) [right = of g] {$X_1$};
    \node (x2) [right = of x1] {$X_2$};
    \node (y) [right = of x2] {$Y$};
    \node (u) [above = 0.5cm of x2] {$U$};
    \path (g) edge (x1);
    \path (x1) edge (x2);
    \path (u) edge (x1);
    \path (u) edge (y);
    \path (x2) edge (y);
}
```

#### Misspecification of the primary phenotype

```{tikz tkz-pleio-5}
#| out.width='65%',
#| engine.opts=list(dvisvgm.opts = "--font-format=woff")
\usetikzlibrary{positioning}
\tikzset{
    > = stealth,
    every path/.append style = {
        arrows = ->,
        thick
    }
}
\tikz{
    \node (g) {$G$};
    \node (x1) [right = of g] {$X_1$};
    \node (y) [right = of x1] {$Y$};
    \node (u) [above right = 0.5cm and 0.25cm of x1] {$U$};
    \node (x2) [below = 0.5cm of x1] {$X_2$};
    \path (x1) edge (y);
    \path (u) edge (x1);
    \path (u) edge (y);
    \path (g) edge (x2);
    \path (x2) edge (x1);
    \path (x2) edge (y);
}
```

#### Correlated pleiotropy

```{tikz tkz-pleio-6}
#| out.width='65%',
#| engine.opts=list(dvisvgm.opts = "--font-format=woff")
\usetikzlibrary{positioning}
\tikzset{
    > = stealth,
    every path/.append style = {
        arrows = ->,
        thick
    }
}
\tikz{
    \node (g) {$G$};
    \node (x1) [right = of g] {$X_1$};
    \node (y) [right = of x1] {$Y$};
    \node (u) [above right = 0.5cm and 0.25cm of x1] {$U$};
    \node (x2) [below = 0.5cm of x1] {$X_2$};
    \path (x1) edge (y);
    \path (u) edge (x1);
    \path (u) edge (y);
    \path (g) edge (x2);
    \path (x2) edge (x1);
    \path (x2) edge (y);
    \path (g) edge (x1);
    \path (g) edge (x2);
}
```

### Bidirectional MR figure of combined DAGs using TikZ

For a bidirectional MR analysis there are 2 separate DAGs, which are as follows.

```{tikz tkz-bidir-fig-1}
#| out.width='65%', 
#| engine.opts=list(template = "tikz-template.tex",
#|                  dvisvgm.opts = "--font-format=woff")
\begin{tikzpicture}
\node (1) at (0,0) {$G_X$};
\node (2) at (1.5,0) {$X$};
\node (3) at (3,0) {$Y$};
\node (4) at (2.25,1) {$U$};
\draw[Arrow] (1) -- (2);
\draw[Arrow] (2) -- (3);
\draw[Arrow] (4) -- (2);
\draw[Arrow] (4) -- (3);
\end{tikzpicture}
```

```{tikz tkz-bidir-fig-2}
#| out.width='65%', 
#| engine.opts=list(template = "tikz-template.tex",
#|                  dvisvgm.opts = "--font-format=woff")
\begin{tikzpicture}
\node (2) at (1.5,0) {$X$};
\node (3) at (3,0) {$Y$};
\node (4) at (2.25,1) {$U$};
\node (5) at (4.5,0) {$G_Y$};
\draw[Arrow] (3) -- (2);
\draw[Arrow] (4) -- (2);
\draw[Arrow] (4) -- (3);
\draw[Arrow] (5) -- (3);
\end{tikzpicture}
```

We can combine these into a single figure as follows.

```{tikz tkz-bidir-fig}
#| out.width='65%', 
#| engine.opts=list(template = "tikz-template.tex",
#|                  dvisvgm.opts = "--font-format=woff")
\begin{tikzpicture}
\node (1) at (0,0) {$G_X$};
\node (2) at (1.5,0) {$X$};
\node (3) at (3,0) {$Y$};
\node (4) at (2.25,1) {$U$};
\node (5) at (4.5,0) {$G_Y$};
% Create dummy X and Y nodes with no content
\node (6) at (1.5,-0.05) {\phantom{$X$}};
\node (7) at (3,-0.05) {\phantom{$Y$}};
\node (8) at (1.5,0.05) {\phantom{$X$}};
\node (9) at (3,0.05) {\phantom{$Y$}};
\draw[Arrow] (1) -- (2);
\draw[Arrow] (8) -- (9);
\draw[BlueArrow] (7) -- (6);
\draw[Arrow] (4) -- (2);
\draw[Arrow] (4) -- (3);
\draw[BlueArrow] (5) -- (3);
\end{tikzpicture}
```

### MVMR DAGs using TikZ

We can plot the DAGs in Figure 4 of @sanderson-ije-2019 [here](https://academic.oup.com/view-large/figure/162152273/dyy262f4.tif).

#### Scenario 1: $X_2$ confounder of $X_1$ and $Y$

```{tikz tkz-mvmr-dag-1}
#| out.width='65%',
#| engine.opts=list(template = "tikz-template.tex",
#|                  dvisvgm.opts = "--font-format=woff")
\begin{tikzpicture}
\node (1) at (0,0) {$G_2$};
\node (2) at (1.5,0) {$X_2$};
\node (3) at (4.5,1) {$Y$};
\node (4) at (3,2) {$U$};
\node (5) at (0,1) {$G_1$};
\node (6) at (1.5,1) {$X_1$};
\draw[Arrow] (1) -- (2);
\draw[Arrow] (2) -- (3);
\draw[Arrow] (4) -- (2);
\draw[Arrow] (4) -- (3);
\draw[Arrow] (5) -- (6);
\draw[Arrow] (6) -- (3);
\draw[Arrow] (4) -- (6);
\draw[Arrow] (2) -- (6);
\end{tikzpicture}
```

#### Scenario 2: $X_2$ collider of $X_1$ and $Y$

```{tikz tkz-mvmr-dag-2}
#| out.width='65%',
#| engine.opts=list(template = "tikz-template.tex",
#|                  dvisvgm.opts = "--font-format=woff")
\begin{tikzpicture}
\node (1) at (0,0) {$G_2$};
\node (2) at (1.5,0) {$X_2$};
\node (3) at (4.5,1) {$Y$};
\node (4) at (3,2) {$U$};
\node (5) at (0,1) {$G_1$};
\node (6) at (1.5,1) {$X_1$};
\draw[Arrow] (1) -- (2);
\draw[Arrow] (3) -- (2);
\draw[Arrow] (4) -- (2);
\draw[Arrow] (4) -- (3);
\draw[Arrow] (5) -- (6);
\draw[Arrow] (6) -- (3);
\draw[Arrow] (4) -- (6);
\draw[Arrow] (6) -- (2);
\end{tikzpicture}
```

#### Scenario 3: $X_2$ on a pleiotropic pathway

```{tikz tkz-mvmr-dag-3}
#| out.width='65%',
#| engine.opts=list(template = "tikz-template.tex",
#|                  dvisvgm.opts = "--font-format=woff")
\begin{tikzpicture}
\node (1) at (0,0) {$G_2$};
\node (2) at (1.5,0) {$X_2$};
\node (3) at (4.5,1) {$Y$};
\node (4) at (3,2) {$U$};
\node (5) at (0,1) {$G_1$};
\node (6) at (1.5,1) {$X_1$};
\draw[Arrow] (1) -- (2);
\draw[Arrow] (2) -- (3);
\draw[Arrow] (4) -- (2);
\draw[Arrow] (4) -- (3);
\draw[Arrow] (5) -- (6);
\draw[Arrow] (6) -- (3);
\draw[Arrow] (4) -- (6);
\end{tikzpicture}
```

#### Scenario 4: $X_2$ mediator of the effect of $X_1$ on $Y$

```{tikz tkz-mvmr-dag-4}
#| out.width='65%',
#| engine.opts=list(template = "tikz-template.tex",
#|                  dvisvgm.opts = "--font-format=woff")
\begin{tikzpicture}
\node (1) at (0,0) {$G_2$};
\node (2) at (1.5,0) {$X_2$};
\node (3) at (4.5,1) {$Y$};
\node (4) at (3,2) {$U$};
\node (5) at (0,1) {$G_1$};
\node (6) at (1.5,1) {$X_1$};
\draw[Arrow] (1) -- (2);
\draw[Arrow] (2) -- (3);
\draw[Arrow] (4) -- (2);
\draw[Arrow] (4) -- (3);
\draw[Arrow] (5) -- (6);
\draw[Arrow] (6) -- (3);
\draw[Arrow] (4) -- (6);
\draw[Arrow] (6) -- (2);
\end{tikzpicture}
```

## quickdag package

We can produce some nice plots with the **quickdag** package, which appears to be based on Eleanor Murray's TikZ code, from [here](https://github.com/jrgant/quickdag)

### Single genotype DAG
```{r quckdg-single-dag, message=FALSE, warning=FALSE}
#| out.width='65%'
if (!require("quickdag")) remotes::install_github("jrgant/quickdag")
library(quickdag)
edges <- c("G -> X",
           "X -> Y",
           "U -> {X Y}")
# DAG
dag  <- qd_dag(edges, verbose = FALSE)
dag %>% render_graph()
```

### Single genotype SWIG

We can also draw the single world intervention graph (SWIG) for the IV model as follows.

```{r quckdg-single-swig}
#| out.width='65%'
swig <- dag %>%
  qd_swig(fixed.nodes = c("G", "X"))
swig %>% render_graph()
```

## Thomas Richardson's TikZ code for SWIGs

Thomas Richardson provides a TikZ/PGF shape library for SWIGs called tikz-swigs, which is available on CTAN [here](https://ctan.org/pkg/tikz-swigs).

* Install the package into your TinyTeX installation with  

    ```r
    tinytex::tlmgr_install("tikz-swigs")
    ```  
* Its user manual is available [here](http://mirrors.ctan.org/graphics/pgf/contrib/tikz-swigs/tikz-swigs.pdf)

To use the tikz chunk engine we again write a LaTeX template based on the preamble in the article by Richardson. The LaTeX template is as follows.
```{verbatim, file='tikz-template-swig-tr.tex', lang='tex'}
```

### SWIGs for single exposure models

We will recreate the SWIG template in Figure 2 (b) of Swanson et al. [here](https://doi.org/10.1080/01621459.2018.1434530).

```{tikz iv-bw}
#| out.width='65%',
#| engine.opts=list(template = "tikz-template-swig-tr.tex",
#|                  dvisvgm.opts = "--font-format=woff")
\begin{tikzpicture}
\tikzset{line width=1.5pt, outer sep=0pt,
  ell/.style={draw, fill=white, inner sep=2pt,
  line width=1.5pt},
  swig vsplit={gap=5pt, inner line width right=0.5pt},
  swig hsplit={gap=5pt, inner line width lower=0.5pt}};

\node[name=G, shape=swig vsplit]{
\nodepart{left}{$G$}
\nodepart{right}{$g$}};

\node[name=X, right=10mm of G,
  shape=swig hsplit]{
\nodepart{upper}{$X^g$}
\nodepart{lower}{$x$}};

\node[name=U, ell, shape=ellipse, above right=7.5mm and 5mm of X, fill=gray]{$U$};

\node[name=Y, ell, shape=ellipse, right=10mm of X]{$Y^x$};

\draw[->, line width=1.5pt,>=stealth]
  (G) edge[out=360, in=170] (X)
  (U) edge (X)
  (U) edge (Y)
  (X) to[out=330, in=180] (Y);
\end{tikzpicture}
```

Let's add colour in the same way as in the original figure.

```{tikz iv-color}
#| engine.opts=list(template = "tikz-template-swig-tr.tex",
#|                  dvisvgm.opts = "--font-format=woff"),
#| out.width='65%'
\begin{tikzpicture}
\tikzset{line width=1.5pt, outer sep=0pt,
  ell/.style={draw, fill=white, inner sep=2pt,
  line width=1.5pt},
  swig vsplit={gap=5pt},
  swig hsplit={gap=5pt, inner line width lower=0.5pt}};

\node[name=G, shape=swig vsplit,
  swig vsplit={line color right=red}]{
\nodepart{left}{$G$}
\nodepart{right}{\textcolor{red}{$g$}}};

\node[name=X, right=10mm of G,
  shape=swig hsplit,
  swig hsplit = {line color lower=red,
                 line width lower=2.5pt}]{
\nodepart{upper}{$X^{\textcolor{red}{g}}$}
\nodepart{lower}{\textcolor{red}{$x$}}};

\node[name=U, ell, shape=ellipse, above right=7.5mm and 5mm of X, fill=gray]{$U$};

\node[name=Y, ell, shape=ellipse, right=10mm of X]{$Y^{\textcolor{red}{x}}$};

\draw[->, line width=1.5pt,>=stealth, color=blue]
  (G) edge[out=360, in=170] (X)
  (U) edge (X)
  (U) edge (Y)
  (X) to[out=330, in=180] (Y);
\end{tikzpicture}
```

### SWIGs for MVMR models

Let's attempt the SWIG for the multivariable Mendelian randomization (MVMR) model.

#### SWIG for MVMR model with 2 independent exposures

Since $G_1$ an instrument for both $X_1$ and $X_2$, $X_2$ represents a pleiotropic effect in this case.

```{tikz mvmr-pleiotropy}
#| engine.opts=list(template = "tikz-template-swig-tr.tex",
#|                  dvisvgm.opts = "--font-format=woff"),
#| out.width='65%'
\begin{tikzpicture}
\tikzset{line width=1.5pt, outer sep=0pt,
  ell/.style={draw, fill=white, inner sep=2pt,
  line width=1.5pt},
  swig vsplit={gap=5pt},
  swig hsplit={gap=5pt, inner line width lower=0.5pt}};

\node[name=G1, 
  shape=swig vsplit,
  swig vsplit={line color right=red}]{
\nodepart{left}{$G_1$}
\nodepart{right}{\textcolor{red}{$g_1$}}};

\node[name=X1, 
  right=10mm of G1,
  shape=swig hsplit,
  swig hsplit = {line color lower=red,
                 line width lower=2.5pt}]{
\nodepart{upper}{$X_1^{\phantom{1}\textcolor{red}{g_1,\,g_2}}$}
\nodepart{lower}{\textcolor{red}{$x_1$}}};

\node[name=X2, 
  below = 1mm of X1,
  shape=swig hsplit,
  swig hsplit = {line color lower=red,
                 line width lower=2.5pt}]{
\nodepart{upper}{$X_2^{\phantom{2}\textcolor{red}{g_1,\,g_2}}$}
\nodepart{lower}{\textcolor{red}{$x_2$}}};

\node[name=G2, 
  left = 10mm of X2,
  shape=swig vsplit,
  swig vsplit={line color right=red}]{
\nodepart{left}{$G_2$}
\nodepart{right}{\textcolor{red}{$g_2$}}};

\node[name=U, 
  ell, 
  shape=ellipse, 
  above right=7.5mm and 5mm of X1, 
  fill=gray]{$U$};

\node[name=Y, 
  ell, 
  shape=ellipse, 
  below right=2mm and 20mm of X1]{$Y^{\textcolor{red}{x_1, x_2}}$};

\draw[->, line width=1.5pt,>=stealth, color=blue]
  (G1) edge[out=360, in=150] (X1)
  (G1) edge[out=360, in=150] (X2)
  (G2) edge[out=360, in=170] (X2)
  (G2) edge[out=360, in=170] (X1)
  (U) edge (X1)
  (U) edge[out=270, in=45] (X2)
  (U) edge (Y)
  (X1) edge[out=330, in=170] (Y)
  (X2) to[out=330, in=190] (Y);
\end{tikzpicture}
```

#### SWIG for MVMR model with $X_2$ confounder of $X_1$--$Y$

```{tikz, mvmr-confounder}
#| engine.opts=list(template = "tikz-template-swig-tr.tex",
#|                  dvisvgm.opts = "--font-format=woff"),
#| out.width='65%'
\begin{tikzpicture}
\tikzset{line width=1.5pt, outer sep=0pt,
  ell/.style={draw, fill=white, inner sep=2pt,
  line width=1.5pt},
  swig vsplit={gap=5pt},
  swig hsplit={gap=5pt, inner line width lower=0.5pt}};

\node[name=G1, 
  shape=swig vsplit,
  swig vsplit={line color right=red}]{
\nodepart{left}{$G_1$}
\nodepart{right}{\textcolor{red}{$g_1$}}};

\node[name=X1, 
  right=10mm of G1,
  shape=swig hsplit,
  swig hsplit = {line color lower=red,
                 line width lower=2.5pt}]{
\nodepart{upper}{$X_1^{\phantom{1}\textcolor{red}{g_1,\,g_2,\,x_2}}$}
\nodepart{lower}{\textcolor{red}{$x_1$}}};

\node[name=X2, 
  below = 3mm of X1,
  shape=swig hsplit,
  swig hsplit = {line color lower=red,
                 line width lower=2.5pt}]{
\nodepart{upper}{$X_2^{\phantom{2}\textcolor{red}{g_1,\,g_2}\phantom{,\,x_2}}$}
\nodepart{lower}{\textcolor{red}{$x_2$}}};

\node[name=G2, 
  left = 10mm of X2,
  shape=swig vsplit,
  swig vsplit={line color right=red}]{
\nodepart{left}{$G_2$}
\nodepart{right}{\textcolor{red}{$g_2$}}};

\node[name=U, 
  ell, 
  shape=ellipse, 
  above right=7.5mm and 5mm of X1, 
  fill=gray]{$U$};

\node[name=Y, 
  ell, 
  shape=ellipse, 
  below right=2mm and 30mm of X1]{$Y^{\textcolor{red}{x_1,\,x_2}}$};

\draw[->, line width=1.5pt,>=stealth, color=blue]
  (G1) edge[out=360, in=150] (X1)
  (G1) edge[out=360, in=150] (X2)
  (G2) edge[out=360, in=170] (X2)
  (G2) edge[out=360, in=170] (X1)
  (U) edge (X1)
  (U) edge[out=270, in=45] (X2)
  (U) edge (Y)
  (X2) edge[out=330, in=10] (X1)
  (X1) edge[out=330, in=170] (Y)
  (X2) to[out=330, in=190] (Y);
\end{tikzpicture}
```

#### SWIG for MVMR model with $X_2$ collider of $X_1$--$Y$

```{tikz, mvmr-collider}
#| engine.opts=list(template = "tikz-template-swig-tr.tex",
#|                  dvisvgm.opts = "--font-format=woff"),
#| out.width='65%'
\begin{tikzpicture}
\tikzset{line width=1.5pt, outer sep=0pt,
  ell/.style={draw, fill=white, inner sep=2pt,
  line width=1.5pt},
  swig vsplit={gap=5pt},
  swig hsplit={gap=5pt, inner line width lower=0.5pt}};

\node[name=G1, 
  shape=swig vsplit,
  swig vsplit={line color right=red}]{
\nodepart{left}{$G_1$}
\nodepart{right}{\textcolor{red}{$g_1$}}};

\node[name=X1, 
  right=10mm of G1,
  shape=swig hsplit,
  swig hsplit = {line color lower=red,
                 line width lower=2.5pt}]{
\nodepart{upper}{$X_1^{\phantom{1}\textcolor{red}{g_1,\,g_2\phantom{,\,x_1,\,y}}}$}
\nodepart{lower}{\textcolor{red}{$x_1$}}};

\node[name=X2, 
  below = 3mm of X1,
  shape=swig hsplit,
  swig hsplit = {line color lower=red,
                 line width lower=2.5pt}]{
\nodepart{upper}{$X_2^{\phantom{2}\textcolor{red}{g_1,\,g_2,\,x_1,\,y}}$}
\nodepart{lower}{\textcolor{red}{$x_2$}}};

\node[name=G2, 
  left = 10mm of X2,
  shape=swig vsplit,
  swig vsplit={line color right=red}]{
\nodepart{left}{$G_2$}
\nodepart{right}{\textcolor{red}{$g_2$}}};

\node[name=U, 
  ell, 
  shape=ellipse, 
  above right=7.5mm and 5mm of X1, 
  fill=gray]{$U$};

\node[name=Y, 
  shape=swig hsplit,
  swig hsplit={line color lower=red},
  below right=2mm and 30mm of X1]{
  \nodepart{upper}{$Y^{\textcolor{red}{x_1}}$}
  \nodepart{lower}{$\textcolor{red}{y}$}};

\draw[->, line width=1.5pt,>=stealth, color=blue]
  (G1) edge[out=360, in=150] (X1)
  (G1) edge[out=360, in=150] (X2)
  (G2) edge[out=360, in=170] (X2)
  (G2) edge[out=360, in=170] (X1)
  (U) edge (X1)
  (U) edge[out=270, in=45] (X2)
  (U) edge (Y)
  (X1) edge[out=330, in=20] (X2)
  (X1) edge[out=330, in=170] (Y)
  (Y) to[out=220, in=10] (X2);
\end{tikzpicture}
```

#### SWIG for MVMR model with $X_2$ mediator of $X_1$--$Y$

```{tikz, mvmr-mediator}
#| engine.opts=list(template = "tikz-template-swig-tr.tex",
#|                  dvisvgm.opts = "--font-format=woff"),
#| out.width='65%'
\begin{tikzpicture}
\tikzset{line width=1.5pt, outer sep=0pt,
  ell/.style={draw, fill=white, inner sep=2pt,
  line width=1.5pt},
  swig vsplit={gap=5pt},
  swig hsplit={gap=5pt, inner line width lower=0.5pt}};

\node[name=G1, 
  shape=swig vsplit,
  swig vsplit={line color right=red}]{
\nodepart{left}{$G_1$}
\nodepart{right}{\textcolor{red}{$g_1$}}};

\node[name=X1, 
  right=10mm of G1,
  shape=swig hsplit,
  swig hsplit = {line color lower=red,
                 line width lower=2.5pt}]{
\nodepart{upper}{$X_1^{\phantom{1}\textcolor{red}{g_1,\,g_2\phantom{,\,x_2}}}$}
\nodepart{lower}{\textcolor{red}{$x_1$}}};

\node[name=X2, 
  below = 3mm of X1,
  shape=swig hsplit,
  swig hsplit = {line color lower=red,
                 line width lower=2.5pt}]{
\nodepart{upper}{$X_2^{\phantom{2}\textcolor{red}{g_1,\,g_2,\,x_1}}$}
\nodepart{lower}{\textcolor{red}{$x_2$}}};

\node[name=G2, 
  left = 10mm of X2,
  shape=swig vsplit,
  swig vsplit={line color right=red}]{
\nodepart{left}{$G_2$}
\nodepart{right}{\textcolor{red}{$g_2$}}};

\node[name=U, 
  ell, 
  shape=ellipse, 
  above right=7.5mm and 5mm of X1, 
  fill=gray]{$U$};

\node[name=Y, 
  ell, 
  shape=ellipse, 
  below right=2mm and 30mm of X1]{$Y^{\textcolor{red}{x_1,\,x_2}}$};

\draw[->, line width=1.5pt,>=stealth, color=blue]
  (G1) edge[out=360, in=150] (X1)
  (G1) edge[out=360, in=150] (X2)
  (G2) edge[out=360, in=170] (X2)
  (G2) edge[out=360, in=170] (X1)
  (U) edge (X1)
  (U) edge[out=270, in=45] (X2)
  (U) edge (Y)
  (X1) edge[out=330, in=35] (X2)
  (X1) edge[out=330, in=170] (Y)
  (X2) to[out=330, in=190] (Y);
\end{tikzpicture}
```

## Excalidraw diagrams

<https://excalidraw.com/> is a virtual whiteboard for sketching hand-drawn like diagrams, such as the MR DAG!

```{r}
#| echo: false
knitr::include_graphics("img/mr-dag.excalidraw.png")
```

If you want to download the image above to upload into excalidraw, please download it as a [png](img/mr-dag.excalidraw.png) or [svg](img/mr-dag.excalidraw.svg).

And the DAG showing effects that are not allowed under the IV core conditions.

```{r}
#| echo: false
knitr::include_graphics("img/mr-dag-violations.excalidraw.png")
```

## Session information for reproducibility

<details><summary>Click here for session info</summary>
```{r}
sessionInfo()
quarto::quarto_version()
tinytex::tlmgr_version()
```
</details>

## References
